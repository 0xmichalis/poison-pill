/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040518060400160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506040518060400160405280600481526020017f5745544800000000000000000000000000000000000000000000000000000000815250601282600090805190602001906200009892919062000194565b508160019080519060200190620000b192919062000194565b508060ff1660808160ff16815250504660a08181525050620000d8620000e860201b60201c565b60c0818152505050505062000445565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200011c919062000354565b60405180910390206040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525080519060200120463060405160200162000179959493929190620003e8565b60405160208183030381529060405280519060200120905090565b828054620001a29062000273565b90600052602060002090601f016020900481019282620001c6576000855562000212565b82601f10620001e157805160ff191683800117855562000212565b8280016001018555821562000212579182015b8281111562000211578251825591602001919060010190620001f4565b5b50905062000221919062000225565b5090565b5b808211156200024057600081600090555060010162000226565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028c57607f821691505b60208210811415620002a357620002a262000244565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154620002d88162000273565b620002e48186620002a9565b9450600182166000811462000302576001811462000314576200034b565b60ff198316865281860193506200034b565b6200031f85620002b4565b60005b83811015620003435781548189015260018201915060208101905062000322565b838801955050505b50505092915050565b6000620003628284620002c9565b915081905092915050565b6000819050919050565b62000382816200036d565b82525050565b6000819050919050565b6200039d8162000388565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003d082620003a3565b9050919050565b620003e281620003c3565b82525050565b600060a082019050620003ff600083018862000377565b6200040e602083018762000377565b6200041d604083018662000377565b6200042c606083018562000392565b6200043b6080830184620003d7565b9695505050505050565b60805160a05160c0516119f96200047560003960006108fc015260006108c8015260006108a201526119f96000f3fe6080604052600436106100ec5760003560e01c80633644e5151161008a578063a9059cbb11610059578063a9059cbb1461031f578063d0e30db01461035c578063d505accf14610366578063dd62ed3e1461038f576100fb565b80633644e5151461024f57806370a082311461027a5780637ecebe00146102b757806395d89b41146102f4576100fb565b806323b872dd116100c657806323b872dd146101935780632e1a7d4d146101d057806330adf81f146101f9578063313ce56714610224576100fb565b806306fdde0314610100578063095ea7b31461012b57806318160ddd14610168576100fb565b366100fb576100f96103cc565b005b600080fd5b34801561010c57600080fd5b50610115610426565b604051610122919061114b565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d9190611206565b6104b4565b60405161015f9190611261565b60405180910390f35b34801561017457600080fd5b5061017d6105a6565b60405161018a919061128b565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b591906112a6565b6105ac565b6040516101c79190611261565b60405180910390f35b3480156101dc57600080fd5b506101f760048036038101906101f291906112f9565b6107f8565b005b34801561020557600080fd5b5061020e61087c565b60405161021b919061133f565b60405180910390f35b34801561023057600080fd5b506102396108a0565b6040516102469190611376565b60405180910390f35b34801561025b57600080fd5b506102646108c4565b604051610271919061133f565b60405180910390f35b34801561028657600080fd5b506102a1600480360381019061029c9190611391565b610921565b6040516102ae919061128b565b60405180910390f35b3480156102c357600080fd5b506102de60048036038101906102d99190611391565b610939565b6040516102eb919061128b565b60405180910390f35b34801561030057600080fd5b50610309610951565b604051610316919061114b565b60405180910390f35b34801561032b57600080fd5b5061034660048036038101906103419190611206565b6109df565b6040516103539190611261565b60405180910390f35b6103646103cc565b005b34801561037257600080fd5b5061038d60048036038101906103889190611416565b610af3565b005b34801561039b57600080fd5b506103b660048036038101906103b191906114b8565b610df2565b6040516103c3919061128b565b60405180910390f35b6103d63334610e17565b3373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3460405161041c919061128b565b60405180910390a2565b6000805461043390611527565b80601f016020809104026020016040519081016040528092919081815260200182805461045f90611527565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610594919061128b565b60405180910390a36001905092915050565b60025481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146106e55781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106dd9190611588565b925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107349190611588565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107e5919061128b565b60405180910390a3600190509392505050565b6108023382610ee7565b61082b813373ffffffffffffffffffffffffffffffffffffffff16610fb790919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6582604051610871919061128b565b60405180910390a250565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000046146108fa576108f561100a565b61091c565b7f00000000000000000000000000000000000000000000000000000000000000005b905090565b60036020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b6001805461095e90611527565b80601f016020809104026020016040519081016040528092919081815260200182805461098a90611527565b80156109d75780601f106109ac576101008083540402835291602001916109d7565b820191906000526020600020905b8154815290600101906020018083116109ba57829003601f168201915b505050505081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a309190611588565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ae1919061128b565b60405180910390a36001905092915050565b42841015610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d90611608565b60405180910390fd5b6000610b406108c4565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9898989600560008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558a604051602001610bc896959493929190611637565b60405160208183030381529060405280519060200120604051602001610bef929190611710565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610c2c9493929190611747565b6020604051602081039080840390855afa158015610c4e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610cc257508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf8906117d8565b60405180910390fd5b86600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610de1919061128b565b60405180910390a350505050505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b8060026000828254610e2991906117f8565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610edb919061128b565b60405180910390a35050565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f369190611588565b9250508190555080600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fab919061128b565b60405180910390a35050565b600080600080600085875af1905080611005576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffc9061189a565b60405180910390fd5b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161103c9190611959565b60405180910390206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001204630604051602001611097959493929190611970565b60405160208183030381529060405280519060200120905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156110ec5780820151818401526020810190506110d1565b838111156110fb576000848401525b50505050565b6000601f19601f8301169050919050565b600061111d826110b2565b61112781856110bd565b93506111378185602086016110ce565b61114081611101565b840191505092915050565b600060208201905081810360008301526111658184611112565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119d82611172565b9050919050565b6111ad81611192565b81146111b857600080fd5b50565b6000813590506111ca816111a4565b92915050565b6000819050919050565b6111e3816111d0565b81146111ee57600080fd5b50565b600081359050611200816111da565b92915050565b6000806040838503121561121d5761121c61116d565b5b600061122b858286016111bb565b925050602061123c858286016111f1565b9150509250929050565b60008115159050919050565b61125b81611246565b82525050565b60006020820190506112766000830184611252565b92915050565b611285816111d0565b82525050565b60006020820190506112a0600083018461127c565b92915050565b6000806000606084860312156112bf576112be61116d565b5b60006112cd868287016111bb565b93505060206112de868287016111bb565b92505060406112ef868287016111f1565b9150509250925092565b60006020828403121561130f5761130e61116d565b5b600061131d848285016111f1565b91505092915050565b6000819050919050565b61133981611326565b82525050565b60006020820190506113546000830184611330565b92915050565b600060ff82169050919050565b6113708161135a565b82525050565b600060208201905061138b6000830184611367565b92915050565b6000602082840312156113a7576113a661116d565b5b60006113b5848285016111bb565b91505092915050565b6113c78161135a565b81146113d257600080fd5b50565b6000813590506113e4816113be565b92915050565b6113f381611326565b81146113fe57600080fd5b50565b600081359050611410816113ea565b92915050565b600080600080600080600060e0888a0312156114355761143461116d565b5b60006114438a828b016111bb565b97505060206114548a828b016111bb565b96505060406114658a828b016111f1565b95505060606114768a828b016111f1565b94505060806114878a828b016113d5565b93505060a06114988a828b01611401565b92505060c06114a98a828b01611401565b91505092959891949750929550565b600080604083850312156114cf576114ce61116d565b5b60006114dd858286016111bb565b92505060206114ee858286016111bb565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061153f57607f821691505b60208210811415611553576115526114f8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611593826111d0565b915061159e836111d0565b9250828210156115b1576115b0611559565b5b828203905092915050565b7f5045524d49545f444541444c494e455f45585049524544000000000000000000600082015250565b60006115f26017836110bd565b91506115fd826115bc565b602082019050919050565b60006020820190508181036000830152611621816115e5565b9050919050565b61163181611192565b82525050565b600060c08201905061164c6000830189611330565b6116596020830188611628565b6116666040830187611628565b611673606083018661127c565b611680608083018561127c565b61168d60a083018461127c565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006116d9600283611698565b91506116e4826116a3565b600282019050919050565b6000819050919050565b61170a61170582611326565b6116ef565b82525050565b600061171b826116cc565b915061172782856116f9565b60208201915061173782846116f9565b6020820191508190509392505050565b600060808201905061175c6000830187611330565b6117696020830186611367565b6117766040830185611330565b6117836060830184611330565b95945050505050565b7f494e56414c49445f5045524d49545f5349474e41545552450000000000000000600082015250565b60006117c26018836110bd565b91506117cd8261178c565b602082019050919050565b600060208201905081810360008301526117f1816117b5565b9050919050565b6000611803826111d0565b915061180e836111d0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561184357611842611559565b5b828201905092915050565b7f4554485f5452414e534645525f4641494c454400000000000000000000000000600082015250565b60006118846013836110bd565b915061188f8261184e565b602082019050919050565b600060208201905081810360008301526118b381611877565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b600081546118e781611527565b6118f181866118ba565b9450600182166000811461190c576001811461191d57611950565b60ff19831686528186019350611950565b611926856118c5565b60005b8381101561194857815481890152600182019150602081019050611929565b838801955050505b50505092915050565b600061196582846118da565b915081905092915050565b600060a0820190506119856000830188611330565b6119926020830187611330565b61199f6040830186611330565b6119ac606083018561127c565b6119b96080830184611628565b969550505050505056fea2646970667358221220816f2da95ebe0f2be7e8b35c7917bd96f63d52c13ed22cd096410b1c3b87cfe964736f6c634300080a0033";

export class WETH__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
